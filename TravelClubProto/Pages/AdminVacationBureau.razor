@page "/AdminVacationBureau"

@using Microsoft.Extensions.Configuration;
@using System.Collections.Generic;
@using System.Data;
@using Microsoft.Data.SqlClient;
@using System.Threading.Tasks;
@using Microsoft.EntityFrameworkCore.Migrations.Operations;
@using TravelClubProto.Data;
@inject DataAccessService DaService


    <ul>
        @foreach (Vacation vac in vacations)
            {
                if (vac.State == "Proposed" || vac.State == "published" || vac.State == "GracePeriod")
                {
        <!-- vac.Destination.AddActivity(); -->

        <BSJumbotron>

            <div class="ViewVacationImage">
                <BSFigureImage src="@vac.ImageLink" />
            </div>

            <div class="ViewDescriptionRow">
                <div class="VacationHotelColumn">
                    <h2>@vac.Destination.Hotel, @vac.Destination.Location</h2>
                    <h10>ID:  @vac.ID </h10>

                    <h2>Feriebeskrivelse: </h2>
                    <p>@vac.Description</p>
                </div>
            </div>

            <br />

            <h6>Prices from: @vac.Prices[vac.Prices.Count - 1] kr. - @vac.Prices[0] kr. </h6>
            <p>
                @for (int i = 0; i<@vac.Prices.Count; i++)
                                    {
                                        string priceIntervalHolder = "";
                        priceIntervalHolder += vac.Prices[i] + "kr.";
                <text>@priceIntervalHolder  &nbsp; &nbsp; &nbsp;</text>
                                    }
            </p>
            <h6>Deadline: @vac.Dates["Deadline"]</h6>

            <BSButton @onclick="@(e => ChangeVacState(vac, "Cancelled"))">Fjern</BSButton>
        </BSJumbotron>
                }

            }
    </ul>
@code {
    public List<Vacation> vacations;

    protected override async Task OnInitializedAsync()
    {
        vacations = await DaService.GetAllVacations(DaService);
    }

    void ChangeVacState(Vacation vac, string state)
    {
        vac.State = state;
    }
}

