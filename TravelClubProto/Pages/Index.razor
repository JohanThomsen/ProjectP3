@page "/"
@using Blazored.Typeahead
@using TravelClubProto.Data
@inject DataAccessService DaService
<div class="SearchFields">
    

    <BSJumbotron Class ="IndexHeaderBox"IsFluid="true">
        <div class="IndexImageContainer">
            <div class="HeaderTitle">Find jeres billige rejse her</div>
            <BSImage Class="VacFigureImgHeaderIndex"src ="https://static.asiawebdirect.com/m/phuket/hotels/krabi-hotels-com/sunrisetropical/dining/hotelBanner/dining.jpg"></BSImage>
        </div>
        <BSContainer>
            <BSForm Model="@formsModelVal">
                <BSBasicForm Class="FormsCollection" IsInline="true">
                        <BSFormGroup Class="home-search">
                            <BlazoredTypeahead SearchMethod="SearchVacationAirport" @bind-Value="formsModelVal.Afrejselufthavn" PlaceHolder="Afrejselufthavn" Context="Departure" EnableDropDown="true" ShowDropDownOnFocus="true">
                                <SelectedTemplate>@Departure</SelectedTemplate>
                                <ResultTemplate>@Departure</ResultTemplate>
                            </BlazoredTypeahead>
                        </BSFormGroup>

                        <BSFormGroup Class="home-search">
                            <BlazoredTypeahead SearchMethod="SearchVacationDestination" @bind-Value="formsModelVal.Rejsemål" PlaceHolder="Land" Context="Destination" EnableDropDown="true" ShowDropDownOnFocus="true">
                                <SelectedTemplate>@Destination</SelectedTemplate>
                                <ResultTemplate>@Destination</ResultTemplate>
                            </BlazoredTypeahead>
                        </BSFormGroup>
    
                    <BSFormGroup Class="home-search">
                        <BSLabel for="InputEmail"></BSLabel>
                        <BSInput id="InputEmail" InputType="InputType.Date" PlaceHolder="Afrejse dato" @bind-Value="formsModelVal.AfrejseDato"></BSInput>
                    </BSFormGroup>

                    <BSFormGroup Class="home-search">
                        <BSLabel for="InputPassword"></BSLabel>
                        <BSInput id="InputPassword" InputType="InputType.Date" PlaceHolder="Hjemrejse dato" @bind-Value="formsModelVal.HjemrejseDato"></BSInput>
                    </BSFormGroup>
                    <a class="btn btn-primary index" href="/vacationView/@formsModelVal.Afrejselufthavn/@formsModelVal.Rejsemål/@formsModelVal.AfrejseDato.ToBinary().ToString()/@formsModelVal.HjemrejseDato.ToBinary().ToString()" role="button">Se mere</a>
                </BSBasicForm>
            </BSForm>
            <h1 class=""> @formErrorInput</h1>
        </BSContainer>
    </BSJumbotron>
</div>

<div class="TravelClubInfo">
    <BSJumbotron IsFluid="true">
        <BSContainer>
            <h2 class="InfoOverskrift">Hvad er TravelClub</h2>
            <p><p>Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis. Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat. Aliquam erat volutpat. Nam dui mi, tincidunt quis, accumsan porttitor, facilisis luctus, metus</p></p>
        </BSContainer>
    </BSJumbotron>
</div>

<div class="docs-example">
    <BSJumbotron IsFluid="true" Class="ImageContainer">
        <BSFigure Class="VacFigures">
            @foreach (Vacation vac in vacations.Take(10))
            {
                if (vac.State == "Published")
                {
                    <div class="VacFigureImg">
                        <a href="/SingleVacation/@vac.ID.ToString()">
                            <BSFigureImage src=@vac.ImageLink />
                            <BSFigureCaption>@vac.Destination </BSFigureCaption>
                        </a>
                    </div>
                }
            }
        </BSFigure>
    </BSJumbotron>
</div>





@code
{
    private List<Vacation> vacations;
    private List<string> airports = new List<string>();
    private List<string> destinations = new List<string>();
    protected override async Task OnInitializedAsync()
    {
        vacations = await DaService.GetAllVacations(DaService);
        foreach (Vacation vac in vacations)
        {
            if (!(airports.Contains(vac.DepartureAirport)))
            {
                airports.Add(vac.DepartureAirport);
            }

        }

        foreach (Vacation vac in vacations)
        {
            if (!(destinations.Contains(vac.Destination.Country)))
            {
                destinations.Add(vac.Destination.Country);
            }
        }
    }

    private async Task<IEnumerable<string>> SearchVacationAirport(string searchText)
    {
        return await Task.FromResult(airports.Where(x => x.ToLower().Contains(searchText.ToLower())).ToList());
    }

    private async Task<IEnumerable<string>> SearchVacationDestination(string searchText)
    {
        return await Task.FromResult(destinations.Where(x => x.ToLower().Contains(searchText.ToLower())).ToList());
    }

    int GetVacCount()
    {
        Console.WriteLine(vacations.Count);
        if (vacations.Count < 10)
        {
            return vacations.Count;
        }
        else
        {
            return 10;
        }
    }

    public class FormsModelVal
    {

        [StringLength(50, ErrorMessage = "email too long (50 character limit).")]
        public string Afrejselufthavn { get; set; }


        [StringLength(50, ErrorMessage = "password too long (20 character limit).")]
        public string Rejsemål { get; set; }

        public DateTime AfrejseDato { get; set; } = DateTime.Now;

        public DateTime HjemrejseDato { get; set; } = DateTime.Now;

        public int AntalDeltagere { get; set; }

    }
    FormsModelVal formsModelVal = new FormsModelVal();

    string formErrorInput = "";
}