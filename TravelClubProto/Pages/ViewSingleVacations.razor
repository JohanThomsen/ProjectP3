
@page "/SingleVacation/{VacationID}"

@using Microsoft.AspNetCore.Mvc;
@using Microsoft.AspNetCore.Mvc.RazorPages;
@using Microsoft.Extensions.Configuration;
@using System.Collections.Generic;
@using System.Data;
@using Microsoft.Data.SqlClient;
@using System.Threading.Tasks;
@using Microsoft.EntityFrameworkCore.Migrations.Operations;
@using TravelClubProto.Data;

@inject DataAccessService DaService




<h3>Se ferier</h3>

<p>@VacationID</p>

<BSJumbotron Class="ViewSingleVacationJumbotron">
    <div class="SingleVacationContainer">
        <div class="ViewSingleVacationImage">
            <BSFigureImage src="@vac.ImageLink" />
        </div>
        <br />

        <div class="ViewSingleVacationHotel">
            <h2>@vac.Destination.Hotel, @vac.Destination.Location</h2>
            <h10>ID:  @vac.ID </h10>
        </div>

        <div class="Row">
            <div class="VacationDescriptionColumn">
                <h4>Beskrivelse af ferien:</h4>
                <p><b>Afrejselufthavn:</b> @vac.DepartureAirport</p>
                <p>@vac.Description</p>
                <h4>Activities:</h4>
                @foreach (Activity item in vac.Destination.Activities)
                {
                    <p>@item.Type</p>
                }
            </div>

            
            <div class="ParticipantDetailColumn">
                <h6>Prices from: @vac.Prices[vac.Prices.Count - 1] kr. - @vac.Prices[0] kr. </h6>
          
                <span class="progressBarGeneratorVS">
                    @for (int i = 0; i < vac.StretchGoals.Count; i++)
                    {
                        <span class="progStretchGoalVS">
                            <div>
                                @(vac.Prices[i]+ " kr.")
                            </div>
                            <progress role="progressbar" class="progressBarJoinedUsersVS" max=@vac.StretchGoals[i] value=@ValueCalc(vac.StretchGoals, vac.StretchGoals[i], joinedUsersHolder)><span>@vac.StretchGoals[i]</span></progress>
                        </span>
                    }
                </span>

                @*<button class="btn btn-secondary" @onclick="JoinVacation">Tilmeld ferie</button>*@
                @*<button class="btn btn-secondary" @onclick="FavouriteVacation">Favorisere ferie</button>*@

                <a class="btn btn-primary" href="@vac.TravelBureauWebsiteLink" role="button">Se mere</a>
                <h6>Deadline: @vac.Dates["Deadline"]</h6>
            </div>
        </div>
    </div>
</BSJumbotron>


@code {
    int joinedUsersHolder;
    int stretchGoalsMax;
    Vacation vac = null;
    public List<Vacation> vacations;
    protected override async Task OnInitializedAsync()
    {
        vac = await DaService.GetVacationByID(DaService, Convert.ToInt32(VacationID));
        joinedUsersHolder = vac.TravelGroup.GetUserIDsFromRelation(vac.ID, "Joined").ConfigureAwait(true).GetAwaiter().GetResult().Count;
        stretchGoalsMax = vac.StretchGoals.Max();
    }

    [Parameter]
    public string VacationID { get; set; }


    @*Calculates progress bar fill value from joined user and stretch goals*@
    int ValueCalc(List<int> stretchGoals, int currGoal, int joinedUsers)
    {
        int prevIndex = stretchGoals.IndexOf(currGoal) == 0 ? 0 : stretchGoals.IndexOf(currGoal) - 1;
        int prevGoal = stretchGoals[prevIndex];

        if (joinedUsers >= currGoal)
        {
            return currGoal;
        }
        else if (currGoal.Equals(stretchGoals[0]))
        {
            return joinedUsers;
        }
        else
        {
            return joinedUsers - prevGoal;
        }
    }



    //async public void JoinVacation()
    //{
    //    List<Vacation> templit = await DaService.GetAllVacations(DaService);
    //    templit[0].TravelGroup.ChangeVacationRelation(15, 34, "Joined");
    //}

    //async public void FavouriteVacation()
    //{
    //    List<Vacation> templit = await DaService.GetAllVacations(DaService);
    //    Console.WriteLine(templit[0].ID);
    //    templit[0].TravelGroup.ChangeVacationRelation(15, 34, "Favourited");
    //}


}
